buildscript {
    repositories {
        mavenCentral()
        jcenter()
    }
    dependencies {
        classpath 'com.github.dcendents:android-maven-gradle-plugin:1.3'
    }
}

plugins {
    id "com.jfrog.bintray" version "1.6"
}
apply plugin: 'com.android.library'
apply plugin: 'com.github.dcendents.android-maven'

Properties stashProps = new Properties()
stashProps.load(project.rootProject.file('stash.properties').newDataInputStream())
version = stashProps.getProperty("version")
group = stashProps.getProperty("group")
archivesBaseName = 'serializer-moshi'
def siteUrl = stashProps.getProperty("siteUrl")
def gitUrl = stashProps.getProperty("gitUrl")
def description = "Serialize/deserialize objects for stash using Gson."

android {
    compileSdkVersion 23
    buildToolsVersion "23.0.2"

    defaultConfig {
        minSdkVersion 15
        targetSdkVersion 23
        versionCode 1
        versionName "1.0"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    testCompile 'junit:junit:4.12'
    compile 'com.android.support:appcompat-v7:23.2.1'
    compile 'com.squareup.moshi:moshi:1.1.0'

    compile project(path: ':core')

    testCompile 'junit:junit:4.10'
    testCompile 'org.assertj:assertj-core:1.7.0'
    testCompile 'org.robolectric:robolectric:3.0'
}


task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}

task javadoc(type: Javadoc) {
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives javadocJar
    archives sourcesJar
}

install {
    repositories.mavenInstaller {
        pom.project {
            name = archivesBaseName
            description = description
            url siteUrl

            packaging 'aar'
//            groupId archivesBaseName
            artifactId = archivesBaseName
            version version

            licenses {
                license {
                    name 'The Apache Software License, Version 2.0'
                    url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    distribution 'repo'
                }
            }
            scm {
                connection gitUrl
                url siteUrl

            }
            developers {
                developer {
                    name 'jhavatar'
                }
            }
        }
    }
}

Properties bintrayProps = new Properties()
bintrayProps.load(project.rootProject.file('local.properties').newDataInputStream())
bintray {
    user = bintrayProps.getProperty("bintray.user")
    key = bintrayProps.getProperty("bintray.apikey")
    configurations = ['archives']
    pkg {
        repo = 'maven'
        name = 'stash-serializer-moshi'
        desc = description
        websiteUrl = siteUrl
        issueTrackerUrl = stashProps.getProperty("issueTrackerUrl")
        vcsUrl = gitUrl
        licenses = ['Apache-2.0']
        publicDownloadNumbers = true
        version {
            name = version
            gpg {
                sign = true //Determines whether to GPG sign the files. The default is false
                passphrase =  bintrayProps.getProperty("bintray.gpg.passphrase") //Optional. The passphrase for GPG signing'
            }
        }
    }
}